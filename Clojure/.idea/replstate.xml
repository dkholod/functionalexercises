<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1474109702887">{:repl-history {:ide [], :local [&quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n\n(def blobs (.listContainers blob-client))&quot; &quot;(def blobs (listContainers blob-client))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n\n(def blobs (.listContainers blob-client))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))&quot; &quot;(def blobs (.listContainers blob-client))&quot; &quot;(print blob-client)&quot; &quot;(type conn-str)&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n&quot; &quot;(.listContainers blob-client)&quot; &quot;(blob-client)&quot; &quot;(defn get-logs-container [client] (.getContainerReference client \&quot;sv-shippedlogs\&quot;))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n\n(defn get-logs-container [client] (.getContainerReference client \&quot;sv-shippedlogs\&quot;))\n&quot; &quot;(get-logs-container blob-client)&quot; &quot;(get-logs-container (blob-client))&quot; &quot;(defn get-container [] (get-logs-container (blob-client)))&quot; &quot;(get-container)&quot; &quot;(get-container .listBlobs)&quot; &quot;(.listBlobs get-container (\&quot;\&quot; true))&quot; &quot;(.listBlobs get-container \&quot;\&quot; true?)&quot; &quot;(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))&quot; &quot;blob-client&quot; &quot;'azurelog.reader/blob-client&quot; &quot;azurelog.reader/blob-client&quot; &quot;(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n&quot; &quot;(defn get-logs-container [] (.getContainerReference blob-client \&quot;sv-shippedlogs\&quot;))\n&quot; &quot;(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n\n(defn get-container [] (.getContainerReference blob-client \&quot;sv-shippedlogs\&quot;))\n&quot; &quot;(.listBlobs get-container \&quot;\&quot; true)&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str conn-str))))\n\n(defn get-container [] (.getContainerReference blob-client \&quot;test\&quot;))\n&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n&quot; &quot;(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str))))\n&quot; &quot;(defn get-container [] (.getContainerReference blob-client \&quot;test\&quot;))&quot; &quot;(.listBlobs get-container)&quot; &quot;conn-str&quot; &quot;(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n&quot; &quot;(print conn-str)&quot; &quot;(defn blob-client []\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n&quot; &quot;(type (blob-client))&quot; &quot;(defn get-container [] (.getContainerReference (blob-client) \&quot;test\&quot;))&quot; &quot;(type (get-container))&quot; &quot;(.listBlobs (get-container))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n&quot; &quot;(type blob-client)&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn get-container [name] (.getContainerReference blob-client name))\n&quot; &quot;(type (get-container \&quot;test\&quot;))&quot; &quot;(type (get-container \&quot;test1\&quot;))&quot; &quot;(defn size-of-container [name]\n  (.. (CloudStorageAccount/parse conn-str) createCloudBlobClient getContainerReference))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. (CloudStorageAccount/parse conn-str) createCloudBlobClient getContainerReference name))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. (CloudStorageAccount/parse conn-str) createCloudBlobClient (getContainerReference name)))\n&quot; &quot;(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn get-container [name] (.getContainerReference blob-client name))\n\n\n(defn size-of-container [name]\n  (.. blob-client createCloudBlobClient (getContainerReference name)))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name)))\n\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true)))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iter))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator-seq))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator iterator-seq))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true)))\n\n\n(type (size-of-container \&quot;test\&quot;))\n&quot; &quot;\n(defn size-of-container [name]\n  (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n\n\n(type (size-of-container \&quot;test\&quot;))&quot; &quot;\n(defn size-of-container [name]\n  (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator)))\n&quot; &quot;\n(defn size-of-container [name]\n  (-&gt; .. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator iterator-seq))\n&quot; &quot;\n(defn size-of-container [name]\n  (-&gt; (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator) iterator-seq))\n&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (print a))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (print (.. a getProperties getLength)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (print (.. a getProperties getLength) (\&quot;-\&quot;)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (print (.. a getProperties getLength) \&quot;sss\&quot;))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n\n(type (size-of-container \&quot;test\&quot;))\n\n(size-of-container \&quot;test\&quot;)&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (.. a getProperties getLength))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n&quot; &quot;(defn size-of-container [name]\n  (reduce + (map (fn [a] (.. a getProperties getLength)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n&quot; &quot;\n(defn size-of-container [name]\n  (reduce + ((map (fn [a] (.. a getProperties getLength)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator)))))\n&quot; &quot;(defn size-of-container [name]\n  ((map (fn [a] (.. a getProperties getLength)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n\n(size-of-container \&quot;test\&quot;)\n&quot; &quot;\n(defn size-of-container [name]\n  ((map (fn [a] (.. a getProperties getLength))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator)))\n    )\n  )\n\n\n(size-of-container \&quot;test\&quot;)&quot; &quot;\n(defn size-of-container [name]\n  ((map (fn [a] (.. a getProperties getLength)))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n\n(size-of-container \&quot;test\&quot;)\n&quot; &quot;(defn size-of-container [name]\n  ((map (fn [a] (.. a getProperties getLength))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n  )\n&quot; &quot;\n(defn size-of-container [name]\n  ((map (fn [a] (.. a getProperties getLength))\n        iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator)))\n  )&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (print (.. a getProperties getLength) \&quot;sss\&quot;))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n\n(type (size-of-container \&quot;test\&quot;))\n\n(size-of-container \&quot;test\&quot;)\n&quot; &quot;\n(defn size-of-container [name]\n  (map (fn [a] (.. a getProperties getLength))\n        (iterator-seq (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))))\n\n\n(type (size-of-container \&quot;test\&quot;))\n\n(size-of-container \&quot;test\&quot;)&quot; &quot;(defn size-of-container [name]\n  (map (fn [a] (.. a getProperties getLength))\n        (iterator-seq \n          (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n       )\n  )\n&quot; &quot;(defn size-of-container [name]\n  (reduce + (map (fn [a] (.. a getProperties getLength))\n       (iterator-seq\n         (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n       ))\n  )\n&quot; &quot;(type (size-of-container \&quot;test\&quot;))&quot; &quot;(size-of-container \&quot;test\&quot;)&quot; &quot;(defn size-of-account []\n  (iterator-seq (.. blob-client listContainers iterator))\n  )\n\n(type (size-of-account))\n(size-of-account)\n&quot; &quot;(defn size-of-account []\n  ( map (fn [c] (.getName c))\n    (iterator-seq (.. blob-client listContainers iterator))\n    )\n  )\n\n(type (size-of-account))\n(size-of-account)\n&quot; &quot;(defn size-of-account []\n  ( map (fn [c] (-&gt; .getName c size-of-container))\n    (iterator-seq (.. blob-client listContainers iterator))\n    )\n  )\n&quot; &quot;\n(defn size-of-account []\n  ( map (fn [c] (-&gt; (.getName c) size-of-container))\n    (iterator-seq (.. blob-client listContainers iterator))\n    )\n  )\n\n(type (size-of-account))\n(size-of-account)\n&quot; &quot;(defn size-of-account []\n  (reduce + (map (fn [c] (-&gt; (.getName c) size-of-container))\n    (iterator-seq (.. blob-client listContainers iterator))\n       ))\n  )\n\n(type (size-of-account))\n(size-of-account)\n&quot; &quot;(defn to-kb [b] (/ b 1024))&quot; &quot;(to-kb size-of-container \&quot;test\&quot;)&quot; &quot;(defn to-kb [b] (double (/ b 1024)))&quot; &quot;(to-kb size-of-account)&quot; &quot;(defn size-of-container [name]\n  (reduce + (map (#(.. % getProperties getLength))\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map (fn [a] (.. a getProperties getLength))\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map ((-&gt; #(.getName %) size-of-container))\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n\n(defn to-kb [b] (double (/ b 1024)))\n&quot; &quot;\n(defn size-of-account []\n  (reduce + (map ((-&gt; (#(.getName %)) size-of-container))\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n&quot; &quot;\n(defn size-of-account []\n  (reduce + (map (#(-&gt; (.getName %) size-of-container))\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )&quot; &quot;(defn size-of-account []\n  (reduce + (map #((-&gt; (.getName %) size-of-container))\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n&quot; &quot;(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n\n(-&gt; \&quot;test\&quot; size-of-container to-kb)\n(to-kb (size-of-account))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n\n(-&gt; \&quot;test\&quot; size-of-container to-kb)\n(to-kb (size-of-account))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=funcz;\&quot;\n       \&quot;AccountKey=vKsF+OJaqLsRs4uUQ6hwgLLgtJNJIRqRNc7r36dNsQPZR6I48kuLshBWVhBVbkgjqlQQPvAnh/a3cjbasKNoCw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=func;\&quot;\n       \&quot;AccountKey=vKsF+OJaqLsRs4uUQ6hwgLLgtJNJIRqRNc7r36dNsQPZR6I48kuLshBWVhBVbkgjqlQQPvAnh/a3cjbasKNoCw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n\n(-&gt; \&quot;test\&quot; size-of-container to-kb)\n(to-kb (size-of-account))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=funcz;\&quot;\n       \&quot;AccountKey=vKsF+OJaqLsRs4uUQ6hwgLLgtJNJIRqRNc7r36dNsQPZR6I48kuLshBWVhBVbkgjqlQQPvAnh/a3cjbasKNoCw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n\n(-&gt; \&quot;test\&quot; size-of-container to-kb)\n(to-kb (size-of-account))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=funcz;\&quot;\n       \&quot;AccountKey=vKsF+OJaqLsRs4uUQ6hwgLLgtJNJIRqRNc7r36dNsQPZR6I48kuLshBWVhBVbkgjqlQQPvAnh/a3cjbasKNoCw==;\&quot;))\n\n(def blob-client\n  (.createCloudBlobClient (CloudStorageAccount/parse conn-str)))\n\n(defn size-of-container [name]\n  (reduce + (map #(.. % getProperties getLength)\n                 (iterator-seq\n                   (.. blob-client (getContainerReference name) (listBlobs \&quot;\&quot; true) iterator))\n                 ))\n  )\n\n(defn size-of-account []\n  (reduce + (map #(-&gt; (.getName %) size-of-container)\n                 (iterator-seq (.. blob-client listContainers iterator))\n                 ))\n  )\n\n(defn to-kb [b] (double (/ b 1024)))\n\n(-&gt; \&quot;test\&quot; size-of-container to-kb)\n(to-kb (size-of-account))&quot; &quot;(-&gt; \&quot;test\&quot; size-of-container to-kb)&quot; &quot;(to-kb (size-of-account))&quot;], :remote []}}</component>
</project>