<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1473192057253">{:repl-history {:ide [], :local [&quot;(ns azure.AzureStorageSize)\n  (:import [com.microsoft.windowsazure.services.core.storage CloudStorageAccount]\n           [com.microsoft.windowsazure.services.blob.client CloudBlobClient CloudBlobContainer CloudBlockBlob CloudBlob BlobContainerPermissions BlobContainerPublicAccessType]\n           )&quot; &quot;(ns azure.AzureStorageSize)\n  (import [com.microsoft.windowsazure.services.core.storage CloudStorageAccount]\n           [com.microsoft.windowsazure.services.blob.client CloudBlobClient CloudBlobContainer CloudBlockBlob CloudBlob BlobContainerPermissions BlobContainerPublicAccessType]\n           )&quot; &quot;(ns azure.AzureStorageSize)\n  (import [com.microsoft.windowsazure.services.core.storage CloudStorageAccount]\n           [com.microsoft.windowsazure.services.blob.client CloudBlobClient CloudBlobContainer CloudBlockBlob CloudBlob BlobContainerPermissions BlobContainerPublicAccessType]\n           )\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75\&quot;\n       \&quot;;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def container\n  (-&gt; conn-str\n      CloudStorageAccount/parse\n      .createCloudBlobClient\n      (.getContainerReference \&quot;test\&quot;)))&quot; &quot;(def blobs blob-list container)&quot; &quot;(ns azure.AzureStorageSize)\n  (import [com.microsoft.windowsazure.services.core.storage CloudStorageAccount]\n           [com.microsoft.windowsazure.services.blob.client CloudBlobClient CloudBlobContainer CloudBlockBlob CloudBlob BlobContainerPermissions BlobContainerPublicAccessType]\n           )\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75\&quot;\n       \&quot;;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def container\n  (-&gt; conn-str\n      CloudStorageAccount/parse\n      .createCloudBlobClient\n      (.getContainerReference \&quot;test\&quot;)))\n\n(defn blob-list [container]\n  (filter #(instance? CloudBlob %) (.listBlobs container)))\n&quot; &quot;(def blobs (blob-list container) )&quot; &quot;(print blobs)&quot; &quot;(map () blobs)&quot; &quot;(:import [com.microsoft.windowsazure.services.core.storage CloudStorageAccount]\n           [com.microsoft.windowsazure.services.blob.client CloudBlobClient CloudBlobContainer CloudBlockBlob CloudBlob BlobContainerPermissions BlobContainerPublicAccessType]\n           )&quot; &quot;(+ 1 1)&quot; &quot;(ns azure.AzureStorageSize\n  :import [com.microsoft.azure.storage CloudStorageAccount])\n\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75\&quot;\n       \&quot;;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def container\n  (-&gt; conn-str\n      CloudStorageAccount/parse\n      .createCloudBlobClient\n      (.getContainerReference \&quot;test\&quot;)))\n\n(defn blob-list [container]\n  (filter #(instance? CloudBlob %) (.listBlobs container)))\n\n(def blobs (blob-list container) )\n(map () blobs)&quot; &quot;(ns azure.AzureStorageSize\n  :import [com.microsoft.azure.storage CloudStorageAccount])\n\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75\&quot;\n       \&quot;;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n(def container\n  (-&gt; conn-str\n      CloudStorageAccount/parse\n      .createCloudBlobClient\n      (.getContainerReference \&quot;test\&quot;)))\n\n(defn blob-list [container]\n  (filter #(instance? CloudBlob %) (.listBlobs container)))\n\n(def blobs (blob-list container) )\n&quot; &quot;(ns azure.AzureStorageSize\n  import [com.microsoft.azure.storage CloudStorageAccount])\n&quot; &quot;(ns azure.AzureStorageSize\n  :import [com.microsoft.azure.storage CloudStorageAccount])\n&quot; &quot;(ns azure.AzureStorageSize\n  (:import [com.microsoft.azure.storage CloudStorageAccount]))\n&quot; &quot;(ns azure.AzureStorageSize\n  (import [com.microsoft.azure CloudStorageAccount]))&quot; &quot;(ns azure.AzureStorageSize\n  (:import [com.microsoft.azure CloudStorageAccount]))&quot; &quot;(ns azure.AzureStorageSize\n  (:import (com.microsoft.azure CloudStorageAccount)))&quot; &quot;(ns azure.AzureStorageSize)&quot; &quot;(import (com.microsoft.azure CloudStorageAccount))&quot; &quot;(import (com.microsoft.azure))&quot; &quot;(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75\&quot;\n       \&quot;;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))&quot; &quot;(def container\n  (-&gt; conn-str\n      CloudStorageAccount/parse\n      .createCloudBlobClient\n      (.getContainerReference \&quot;test\&quot;)))&quot; &quot;(ns azure.AzureStorageSize\n(:import (com.microsoft.azure CloudStorageAccount)))&quot; &quot;(ns azure.AzureStorageSize\n(:import (com.microsoft.azure)))&quot; &quot;(defn blob-client [config]\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str config))))&quot; &quot;(ns azure.AzureStorageSize\n(:import (com.microsoft.azure.storage)))&quot; &quot;(ns azure.AzureStorageSize\n(:import (com.microsoft.azure.storage.blob)))&quot; &quot;(ns azure.AzureStorageSize\n(:import (com.microsoft.azure.storage.blob1)))&quot; &quot;(ns azurelog.reader\n  (:require [clj-time.core :as t]\n            [clj-time.format :as f]\n            [clojure.java.io :as io])\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [java.nio ByteOrder ByteBuffer]\n           [com.microsoft.azure.storage.blob]\n           [java.util.zip GZIPInputStream]\n           [org.apache.commons.io.input BoundedInputStream]))\n&quot; &quot;(ns azurelog.reader\n  (:require [clj-time.core :as t]\n            [clj-time.format :as f]\n            [clojure.java.io :as io])\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [java.nio ByteOrder ByteBuffer]\n           [com.microsoft.azure.storage.blob]\n           [java.util.zip GZIPInputStream]))\n&quot; &quot;(ns azurelog.reader\n  (:require [clj-time.format :as f]\n            [clojure.java.io :as io])\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [java.nio ByteOrder ByteBuffer]\n           [com.microsoft.azure.storage.blob]\n           [java.util.zip GZIPInputStream]))\n&quot; &quot;(ns azurelog.reader\n  (:require [clojure.java.io :as io])\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [java.nio ByteOrder ByteBuffer]\n           [com.microsoft.azure.storage.blob]\n           [java.util.zip GZIPInputStream]))\n&quot; &quot;(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob1]))&quot; &quot;(ns azurelog.reader\n  (:import [com.microsoft.azure.storage CloudStorageAccount]\n           [com.microsoft.azure.storage.blob]))\n\n(def conn-str\n  (str \&quot;DefaultEndpointsProtocol=http;\&quot;\n       \&quot;AccountName=functiond31d29008d75;\&quot;\n       \&quot;AccountKey=DYSnfB8W6/Jikmh4Cuyo7ZPW4G+cy2tiDKurVinxbvV1TlnFld6RGdWZOKkKx0IdKV8P3r+RNJPruxJJVTuBcw==;\&quot;))\n\n&quot; &quot;(defn blob-client [config]\n  (.createCloudBlobClient (CloudStorageAccount (conn-str config))))&quot; &quot;\n\n(defn blob-client [config]\n  (.createCloudBlobClient (CloudStorageAccount/parse (conn-str config))))\n\n&quot;], :remote []}}</component>
</project>